"""Initial migration

Revision ID: 618616b7cdef
Revises: 
Create Date: 2024-01-17 17:33:34.033561

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '618616b7cdef'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_details',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('lastname', sa.String(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_details_id'), 'user_details', ['id'], unique=False)
    op.create_index(op.f('ix_user_details_lastname'), 'user_details', ['lastname'], unique=False)
    op.create_index(op.f('ix_user_details_name'), 'user_details', ['name'], unique=False)
    op.create_index(op.f('ix_user_details_phone_number'), 'user_details', ['phone_number'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('user_details_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_details_id'], ['user_details.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('meal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('price', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('likes_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('like',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('meal_id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Enum('LIKE', 'DISLIKE', name='likedislikeenum'), nullable=False),
    sa.ForeignKeyConstraint(['meal_id'], ['meal.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('meal_category_association',
    sa.Column('meal_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.ForeignKeyConstraint(['meal_id'], ['meal.id'], ),
    sa.PrimaryKeyConstraint('meal_id', 'category_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('meal_category_association')
    op.drop_table('like')
    op.drop_table('meal')
    op.drop_table('user')
    op.drop_index(op.f('ix_user_details_phone_number'), table_name='user_details')
    op.drop_index(op.f('ix_user_details_name'), table_name='user_details')
    op.drop_index(op.f('ix_user_details_lastname'), table_name='user_details')
    op.drop_index(op.f('ix_user_details_id'), table_name='user_details')
    op.drop_table('user_details')
    op.drop_table('category')
    # ### end Alembic commands ###
